# This Dockerfile is a broad combination of Dockerfiles of rocker's rstudio, tidyverse and verse images 
# with additions of some R packages and bioinformatics software. They can be found in: https://github.com/rocker-org/rocker
# See also https://www.rocker-project.org/.
FROM rocker/r-ver:3.6.3

ARG RSTUDIO_VERSION
ENV RSTUDIO_VERSION=${RSTUDIO_VERSION:-1.2.5042}
ARG S6_VERSION
ENV S6_VERSION=${S6_VERSION:-v1.21.7.0}
ENV S6_BEHAVIOUR_IF_STAGE2_FAILS=2
ENV PATH=/usr/lib/rstudio-server/bin:$PATH

ARG PANDOC_TEMPLATES_VERSION
ENV PANDOC_TEMPLATES_VERSION=${PANDOC_TEMPLATES_VERSION:-2.9.2.1}

ARG PANDOC_VERSION
ENV PANDOC_VERSION=${PANDOC_VERSION:-2.9.2.1}

ARG CTAN_SS_DATE="2020/05/06"

# Version-stable CTAN repo from the tlnet archive at texlive.info, used in the
# TinyTeX installation: chosen as the frozen snapshot of the TeXLive release
# shipped for the base Debian image of a given rocker/r-ver tag.
# Debian buster => TeXLive 2018, frozen release snapshot
ARG CTAN_REPO=${CTAN_REPO:-https://www.texlive.info/tlnet-archive/${CTAN_SS_DATE}/tlnet}
ENV CTAN_REPO=${CTAN_REPO}

ENV PATH=$PATH:/opt/TinyTeX/bin/x86_64-linux/

## Download and install RStudio server & dependencies
## Attempts to get detect latest version, otherwise falls back to version given in $VER
## Symlink pandoc, pandoc-citeproc so they are available system-wide
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    file \
    git \
    libapparmor1 \
    libcurl4-openssl-dev \
    libedit2 \
    libssl-dev \
    lsb-release \
    psmisc \
    procps \
    python-setuptools \
    sudo \
    wget \
    libclang-dev \
    libclang-3.8-dev \
    #libobjc-6-dev \
    #libclang1-3.8 \
    #libclang-common-3.8-dev \
    #libllvm3.8 \
    libobjc4 \
    libgc1c2 \
    bzip2 \
    curl \
    build-essential \
  && if [ -z "$RSTUDIO_VERSION" ]; then \
        RSTUDIO_URL="https://www.rstudio.org/download/latest/stable/server/bionic/rstudio-server-latest-amd64.deb"; \
     else \
        RSTUDIO_URL="http://download2.rstudio.org/server/bionic/amd64/rstudio-server-${RSTUDIO_VERSION}-amd64.deb"; \ 
     fi \
  && wget -q $RSTUDIO_URL \
  && dpkg -i rstudio-server-*-amd64.deb \
  && rm rstudio-server-*-amd64.deb \
  ## Symlink standard pandoc templates for use system-wide
  && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin \
  && git clone --recursive --branch ${PANDOC_TEMPLATES_VERSION} https://github.com/jgm/pandoc-templates \
  && mkdir -p /opt/pandoc/templates \
  && cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates* \
  && mkdir /root/.pandoc && ln -s /opt/pandoc/templates /root/.pandoc/templates \
  # Download and install the latest version of pandoc
  && wget -P /tmp/ https://github.com/jgm/pandoc/releases/download/${PANDOC_VERSION}/pandoc-${PANDOC_VERSION}-1-amd64.deb \
  && dpkg -i /tmp/pandoc-${PANDOC_VERSION}-1-amd64.deb \
  && rm /tmp/pandoc-${PANDOC_VERSION}-1-amd64.deb \
  ## RStudio wants an /etc/R, will populate from $R_HOME/etc
  && mkdir -p /etc/R \
  ## Write config files in $R_HOME/etc
  && echo '\n\
    \n# Configure httr to perform out-of-band authentication if HTTR_LOCALHOST \
    \n# is not set since a redirect to localhost may not work depending upon \
    \n# where this Docker container is running. \
    \nif(is.na(Sys.getenv("HTTR_LOCALHOST", unset=NA))) { \
    \n  options(httr_oob_default = TRUE) \
    \n}' >> /usr/local/lib/R/etc/Rprofile.site \
  && echo "PATH=${PATH}" >> /usr/local/lib/R/etc/Renviron \
  ## Need to configure non-root user for RStudio
  && useradd rstudio \
  && echo "rstudio:rstudio" | chpasswd \
	&& mkdir /home/rstudio \
	&& chown rstudio:rstudio /home/rstudio \
	&& addgroup rstudio staff \
  ## Prevent rstudio from deciding to use /usr/bin/R if a user apt-get installs a package
  &&  echo 'rsession-which-r=/usr/local/bin/R' >> /etc/rstudio/rserver.conf \
  ## use more robust file locking to avoid errors when using shared volumes:
  && echo 'lock-type=advisory' >> /etc/rstudio/file-locks \
  ## configure git not to request password each time
  && git config --system credential.helper 'cache --timeout=3600' \
  && git config --system push.default simple \
  ## Set up S6 init system
  && wget -P /tmp/ https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-amd64.tar.gz \
  && tar xzf /tmp/s6-overlay-amd64.tar.gz -C / \
  && mkdir -p /etc/services.d/rstudio \
  && echo '#!/usr/bin/with-contenv bash \
          \n## load /etc/environment vars first: \
  		  \n for line in $( cat /etc/environment ) ; do export $line ; done \
          \n exec /usr/lib/rstudio-server/bin/rserver --server-daemonize 0' \
          > /etc/services.d/rstudio/run \
  && echo '#!/bin/bash \
          \n rstudio-server stop' \
          > /etc/services.d/rstudio/finish \
  && mkdir -p /home/rstudio/.rstudio/monitored/user-settings \
  && echo 'alwaysSaveHistory="0" \
          \nloadRData="0" \
          \nsaveAction="0"' \
          > /home/rstudio/.rstudio/monitored/user-settings/user-settings \
  && chown -R rstudio:rstudio /home/rstudio/.rstudio

COPY userconf.sh /etc/cont-init.d/userconf

## running with "-e ADD=shiny" adds shiny server
COPY add_shiny.sh /etc/cont-init.d/add
COPY disable_auth_rserver.conf /etc/rstudio/disable_auth_rserver.conf
COPY pam-helper.sh /usr/lib/rstudio-server/bin/pam-helper

EXPOSE 8787

RUN apt-get update -qq && apt-get -y --no-install-recommends install \
  libxml2-dev \
  libcairo2-dev \
  libsqlite-dev \
  libmariadbd-dev \
  libmariadbclient-dev \
  libpq-dev \
  libssh2-1-dev \
  unixodbc-dev \
  libsasl2-dev \
  && install2.r --error \
    --deps TRUE \
    tidyverse \
    dplyr \
    devtools \
    formatR \
    remotes \
    selectr \
    caTools \
    BiocManager

## Add LaTeX, rticles and bookdown support
RUN wget "https://travis-bin.yihui.name/texlive-local.deb" \
  && dpkg -i texlive-local.deb \
  && rm texlive-local.deb \
  && apt-get update \
  && apt-get install -y --no-install-recommends \
    ## for rJava
    default-jdk \
    ## Nice Google fonts
    fonts-roboto \
    ## used by some base R plots
    ghostscript \
    ## used to build rJava and other packages
    libbz2-dev \
    libicu-dev \
    liblzma-dev \
    ## system dependency of hunspell (devtools)
    libhunspell-dev \
    ## system dependency of hadley/pkgdown
    libmagick++-dev \
    ## rdf, for redland / linked data
    librdf0-dev \
    ## for V8-based javascript wrappers
    libv8-dev \
    ## R CMD Check wants qpdf to check pdf sizes, or throws a Warning
    qpdf \
    ## For building PDF manuals
    texinfo \
    ## for git via ssh key
    ssh \
    ## just because
    less \
    vim \
    ## parallelization
    libzmq3-dev \
    libopenmpi-dev \
  ## Use tinytex for LaTeX installation
  && install2.r --error tinytex \
  ## Admin-based install of TinyTeX:
  && wget -qO- \
    "https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh" | \
    sh -s - --admin --no-path \
  && mv ~/.TinyTeX /opt/TinyTeX \
  && if /opt/TinyTeX/bin/*/tex -v | grep -q 'TeX Live 2018'; then \
      ## Patch the Perl modules in the frozen TeX Live 2018 snapshot with the newer
      ## version available for the installer in tlnet/tlpkg/TeXLive, to include the
      ## fix described in https://github.com/yihui/tinytex/issues/77#issuecomment-466584510
      ## as discussed in https://www.preining.info/blog/2019/09/tex-services-at-texlive-info/#comments
      wget -P /tmp/ ${CTAN_REPO}/install-tl-unx.tar.gz \
      && tar -xzf /tmp/install-tl-unx.tar.gz -C /tmp/ \
      && cp -Tr /tmp/install-tl-*/tlpkg/TeXLive /opt/TinyTeX/tlpkg/TeXLive \
      && rm -r /tmp/install-tl-*; \
    fi \
  && /opt/TinyTeX/bin/*/tlmgr path add \
  && Rscript -e "tinytex::r_texmf()" \
  && chown -R root:staff /opt/TinyTeX \
  && chmod -R g+w /opt/TinyTeX \
  && chmod -R g+wx /opt/TinyTeX/bin \
  && echo "PATH=${PATH}" >> /usr/local/lib/R/etc/Renviron \
  && install2.r --error PKI \
  ## And some nice R packages for publishing-related stuff
  && install2.r --error --deps TRUE \
    bookdown rticles rmdshower rJava


#### Latex packages

RUN tlmgr install ae inconsolata listings metafont mfware parskip\
 pdfcrop tex lm-math unicode-math xcolor\
 # For nice looking pdf reports
 booktabs threeparttable float chngcntr adjustbox hyperref mdwtools\ 
 # Seems to be required for producing pdf output from Rmd
 titling\
 # Seems to be required for converting markdown files to pdf in RStudio 
 epstopdf-pkg\
 && tlmgr path add

# Install latest version of miniconda
RUN wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
   /bin/bash ~/miniconda.sh -b -p /opt/conda && \
   rm ~/miniconda.sh && \
   /opt/conda/bin/conda clean -tipsy && \
   ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
   echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
   echo "conda activate base" >> ~/.bashrc

ENV PATH /opt/conda/bin:$PATH

# Updating conda seems important for biopython to work properly
RUN conda update conda

#### R packages

    # Example package from Bioconductor: GSEA with topGO
RUN R -e "BiocManager::install('topGO')" \
    # Required for visualising GO-enrichment with topGO
    && R -e "BiocManager::install('Rgraphviz')"

RUN install2.r --error --deps TRUE --repos "https://cran.microsoft.com/snapshot/2020-03-17/"\
    # For having nicer colour palettes to be used for visualisations
    RColorBrewer \
    # Running python chunks in one session
    reticulate \
    # Relatively simple and nice-looking tables for both pdf and html
    kableExtra \
    # The best tables available for html output
    DT \
    # Nicest looking presentations with Rmarkdown
    revealjs \
    # For accessing NCBI's databases from R
    rentrez \
    # nicer looking heatmaps
    pheatmap \
    # For nicer and smoother ggplot point labels
    ggrepel \
    # For printing out tables into xlsx files
    openxlsx \
    # For better handling of file paths; https://github.com/krlmlr/here
    here

# Install compareDF from source (for comparing two data.frames)
ARG COMP_DF_VERSION="2.1.0"
RUN wget -P /tmp/ "https://cran.r-project.org/src/contrib/compareDF_${COMP_DF_VERSION}.tar.gz" \
&& R -e "install.packages('/tmp/compareDF_${COMP_DF_VERSION}.tar.gz', repos = NULL, type = 'source')" \
&& rm "/tmp/compareDF_${COMP_DF_VERSION}.tar.gz"

RUN conda update -n base -c defaults conda
RUN conda config --add channels conda-forge
RUN conda config --add channels bioconda

# Install bio-perl, biopython and gawk
RUN conda install python=3.7 biopython 
RUN conda install perl-bioperl
# Gawk is much more powerful than the by default provided mawk
RUN conda install -c conda-forge gawk
RUN conda install -c bioconda snakemake
# exonerate provides some utils for handling fasta files + is an aligner
RUN conda install exonerate
# pcre2grep uses patterns that are compatible with the regular expressions of Perl 5
#RUN conda install -c conda-forge pcre2

# Assists in handling tabular data; https://csvkit.readthedocs.io/en/latest/
RUN conda install -c conda-forge csvkit

# For visualizing workflows
RUN conda install -c conda-forge graphviz xorg-libxrender xorg-libxpm
# Clean all cached material
RUN conda clean --all -f -y

# Save up some space
RUN apt-get clean \
&& rm -rf /var/lib/apt/lists/*

CMD ["/init"]